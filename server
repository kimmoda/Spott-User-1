#!/usr/bin/env node

require('babel-polyfill');

// Define isomorphic constants
global.__SERVER__ = true;
global.__DEVELOPMENT__ = process.env.NODE_ENV !== 'production';

// Server restarting for development
if (__DEVELOPMENT__) {
  if (!require('piping')({ hook: true })) {
    return;
  }
}

// Install some babel stuff (regenerator runtime,..)
require('babel-register');

// Polyfill fetch
require('isomorphic-fetch');

// Create a webpack-friendly node require()
const hook = require('node-hook');
hook.hook('.scss', () => 'module.exports = null;');
hook.hook('.css', () => 'module.exports = null;');
hook.hook('.gif', (source, filename) => `module.exports = '${filename}';`);
hook.hook('.jpg', (source, filename) => `module.exports = '${filename}';`);
hook.hook('.jpeg', (source, filename) => `module.exports = '${filename}';`);
hook.hook('.svg', (source, filename) => `module.exports = '${filename}';`);
hook.hook('.pdf', (source, filename) => `module.exports = '${filename}';`);
hook.hook('.png', (source, filename) => `module.exports = '${filename}';`);

// Delegate further control to the server
require('./src/server');
